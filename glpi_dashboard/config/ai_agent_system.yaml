# GLPI Dashboard AI Agent System Configuration
# Configuração completa do sistema de IA para desenvolvimento colaborativo

# =============================================================================
# CONFIGURAÇÕES GERAIS DO SISTEMA
# =============================================================================
system:
  name: "GLPI Dashboard AI Agent System"
  version: "1.0.0"
  environment: "production"  # development, staging, production
  debug_mode: false
  log_level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  
  # Diretórios do sistema
  directories:
    models: "./models"
    logs: "./logs"
    cache: "./cache"
    temp: "./temp"
    reports: "./reports"
    workflows: "./workflows"
    templates: "./templates"
    data: "./data"

# =============================================================================
# CONFIGURAÇÕES DE HARDWARE E GPU
# =============================================================================
hardware:
  # Configurações de GPU
  gpu:
    auto_detect: true
    preferred_device: "cuda"  # cuda, cpu, auto
    memory_fraction: 0.9  # Fração da VRAM a ser utilizada
    allow_growth: true
    mixed_precision: true
    
  # Configurações de CPU
  cpu:
    max_workers: 8
    thread_pool_size: 16
    
  # Configurações de memória
  memory:
    max_ram_usage_gb: 32
    swap_usage_enabled: false
    garbage_collection_threshold: 0.8

# =============================================================================
# CONFIGURAÇÕES DOS MODELOS NVIDIA
# =============================================================================
models:
  # Modelo principal de reasoning
  nemotron_nano:
    name: "nvidia/nemotron-nano-9b-v2"
    type: "reasoning"
    parameters: 9000000000
    context_length: 131072  # 128K tokens
    precision: "fp16"
    quantization: null
    use_cases: ["reasoning", "analysis", "multilingual"]
    
    # Configurações de inferência
    inference:
      max_new_tokens: 2048
      temperature: 0.3
      top_p: 0.9
      top_k: 50
      repetition_penalty: 1.1
      do_sample: true
      
    # Configurações de otimização
    optimization:
      flash_attention: true
      gradient_checkpointing: true
      cpu_offloading: false
      
  # Modelo especializado em código Python
  codellama_python:
    name: "codellama/CodeLlama-13b-Python-hf"
    type: "code"
    parameters: 13000000000
    context_length: 16384
    precision: "fp16"
    quantization: "4bit"  # Para economizar VRAM
    use_cases: ["code_analysis", "debugging", "code_generation"]
    
    inference:
      max_new_tokens: 1024
      temperature: 0.1  # Baixa para maior precisão
      top_p: 0.95
      top_k: 40
      repetition_penalty: 1.05
      do_sample: true
      
    optimization:
      flash_attention: true
      gradient_checkpointing: true
      cpu_offloading: true
      
  # Modelo para análise de segurança
  security_model:
    name: "deepseek-ai/deepseek-coder-6.7b-instruct"
    type: "security"
    parameters: 6700000000
    context_length: 16384
    precision: "fp16"
    quantization: "8bit"
    use_cases: ["security_audit", "vulnerability_detection"]
    
    inference:
      max_new_tokens: 512
      temperature: 0.05  # Muito baixa para máxima precisão
      top_p: 0.9
      top_k: 30
      repetition_penalty: 1.0
      do_sample: false  # Determinístico para segurança
      
    optimization:
      flash_attention: true
      gradient_checkpointing: true
      cpu_offloading: true
      
  # Modelo para documentação
  documentation_model:
    name: "mistralai/Mistral-7B-Instruct-v0.2"
    type: "documentation"
    parameters: 7000000000
    context_length: 32768
    precision: "fp16"
    quantization: "4bit"
    use_cases: ["documentation", "comments", "explanations"]
    
    inference:
      max_new_tokens: 1024
      temperature: 0.4
      top_p: 0.9
      top_k: 50
      repetition_penalty: 1.1
      do_sample: true
      
    optimization:
      flash_attention: true
      gradient_checkpointing: true
      cpu_offloading: true

# =============================================================================
# CONFIGURAÇÕES DE ORQUESTRAÇÃO
# =============================================================================
orchestration:
  # Configurações do orquestrador
  orchestrator:
    max_concurrent_tasks: 4
    task_timeout_seconds: 300
    retry_attempts: 3
    retry_delay_seconds: 5
    
  # Modos de execução
  execution_modes:
    default: "adaptive"  # sequential, parallel, pipeline, collaborative, adaptive
    fallback: "sequential"
    
  # Balanceamento de carga
  load_balancing:
    strategy: "round_robin"  # round_robin, least_loaded, priority_based
    health_check_interval: 30
    
  # Configurações de agentes
  agents:
    code_analyst:
      model: "codellama_python"
      priority: "high"
      max_instances: 2
      
    security_auditor:
      model: "security_model"
      priority: "critical"
      max_instances: 1
      
    documentation_generator:
      model: "documentation_model"
      priority: "medium"
      max_instances: 2
      
    reasoning_agent:
      model: "nemotron_nano"
      priority: "high"
      max_instances: 1

# =============================================================================
# CONFIGURAÇÕES DE QUALITY GATES
# =============================================================================
quality_gates:
  # Configurações gerais
  enabled: true
  fail_fast: false  # Para em caso de falha crítica
  generate_reports: true
  
  # Gates de segurança
  security:
    sql_injection_prevention:
      enabled: true
      severity: "critical"
      threshold: 0.0  # Zero tolerância
      patterns:
        - "\$_GET\[.*\].*sql"
        - "\$_POST\[.*\].*query"
        - "mysql_query\(\$_"
      whitelist:
        - "prepared_statement"
        - "PDO::prepare"
        
    xss_protection:
      enabled: true
      severity: "critical"
      threshold: 0.0
      patterns:
        - "echo \$_GET"
        - "print \$_POST"
        - "<script.*\$_"
      whitelist:
        - "htmlspecialchars"
        - "filter_var"
        
    authentication_validation:
      enabled: true
      severity: "high"
      threshold: 0.1
      patterns:
        - "\$_SESSION\[.*\].*auth"
        - "login.*without.*validation"
      
    authorization_checks:
      enabled: true
      severity: "high"
      threshold: 0.1
      
  # Gates de performance
  performance:
    response_time:
      enabled: true
      severity: "medium"
      threshold: 2.0  # segundos
      
    memory_usage:
      enabled: true
      severity: "medium"
      threshold: 512  # MB
      
    database_queries:
      enabled: true
      severity: "medium"
      max_queries_per_request: 10
      slow_query_threshold: 1.0  # segundos
      
  # Gates de qualidade de código
  code_quality:
    complexity:
      enabled: true
      severity: "medium"
      cyclomatic_threshold: 10
      cognitive_threshold: 15
      
    test_coverage:
      enabled: true
      severity: "medium"
      minimum_coverage: 0.8  # 80%
      
    documentation:
      enabled: true
      severity: "low"
      minimum_coverage: 0.7  # 70%
      
    coding_standards:
      enabled: true
      severity: "low"
      standard: "PSR-12"
      
  # Gates específicos do GLPI
  glpi_specific:
    glpi_hooks:
      enabled: true
      severity: "medium"
      required_hooks: ["pre_item_add", "post_item_update"]
      
    glpi_rights:
      enabled: true
      severity: "high"
      check_rights_usage: true
      
    glpi_database:
      enabled: true
      severity: "medium"
      check_table_prefix: true
      validate_schema: true

# =============================================================================
# CONFIGURAÇÕES DE TELEMETRIA E MONITORAMENTO
# =============================================================================
telemetry:
  # Configurações gerais
  enabled: true
  collection_interval: 30  # segundos
  retention_days: 30
  
  # NVIDIA NeMo telemetria
  nemo:
    enabled: true
    observability_level: "INFO"  # DEBUG, INFO, WARNING, ERROR
    profiling_enabled: true
    
    # Métricas coletadas
    metrics:
      - "latency"
      - "throughput"
      - "accuracy"
      - "memory_usage"
      - "gpu_utilization"
      - "model_performance"
      
  # Métricas do sistema
  system_metrics:
    cpu_usage: true
    memory_usage: true
    disk_usage: true
    gpu_metrics: true
    network_io: false
    
  # Métricas de aplicação
  application_metrics:
    task_completion_rate: true
    error_rate: true
    quality_gate_pass_rate: true
    model_accuracy: true
    
  # Exportadores
  exporters:
    prometheus:
      enabled: false
      port: 9090
      
    json_file:
      enabled: true
      file_path: "./logs/metrics.json"
      
    console:
      enabled: true
      interval: 60  # segundos

# =============================================================================
# CONFIGURAÇÕES DE LOGGING
# =============================================================================
logging:
  # Configurações gerais
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # Handlers
  handlers:
    console:
      enabled: true
      level: "INFO"
      
    file:
      enabled: true
      level: "DEBUG"
      file_path: "./logs/ai_agent_system.log"
      max_size_mb: 100
      backup_count: 5
      
    error_file:
      enabled: true
      level: "ERROR"
      file_path: "./logs/errors.log"
      max_size_mb: 50
      backup_count: 3
      
  # Loggers específicos
  loggers:
    nvidia_orchestrator:
      level: "INFO"
      
    quality_gates:
      level: "DEBUG"
      
    glpi_integration:
      level: "INFO"
      
    security:
      level: "WARNING"

# =============================================================================
# CONFIGURAÇÕES DE INTEGRAÇÃO GLPI
# =============================================================================
glpi_integration:
  # Configurações da API GLPI
  api:
    base_url: "http://localhost/glpi/apirest.php"
    version: "v1"
    timeout: 30
    retry_attempts: 3
    
    # Autenticação
    auth:
      method: "user_token"  # user_token, app_token, session
      user_token: "${GLPI_USER_TOKEN}"  # Variável de ambiente
      app_token: "${GLPI_APP_TOKEN}"
      
  # Configurações do banco de dados
  database:
    host: "localhost"
    port: 3306
    database: "glpi"
    charset: "utf8mb4"
    # Credenciais via variáveis de ambiente
    username: "${GLPI_DB_USER}"
    password: "${GLPI_DB_PASSWORD}"
    
  # Configurações de análise
  analysis:
    # Diretórios para análise
    source_directories:
      - "./src"
      - "./inc"
      - "./front"
      - "./ajax"
      
    # Extensões de arquivo
    file_extensions:
      - ".php"
      - ".js"
      - ".css"
      - ".sql"
      
    # Exclusões
    exclude_patterns:
      - "*/vendor/*"
      - "*/node_modules/*"
      - "*/cache/*"
      - "*/logs/*"
      
  # Configurações de relatórios
  reporting:
    output_format: "json"  # json, html, pdf
    include_metrics: true
    include_recommendations: true
    include_code_samples: true
    
    # Templates de relatório
    templates:
      security_audit: "./templates/security_report.html"
      code_analysis: "./templates/code_analysis.html"
      documentation: "./templates/documentation.html"

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================
security:
  # Configurações de criptografia
  encryption:
    algorithm: "AES-256-GCM"
    key_derivation: "PBKDF2"
    iterations: 100000
    
  # Configurações de acesso
  access_control:
    require_authentication: true
    session_timeout: 3600  # segundos
    max_failed_attempts: 5
    lockout_duration: 300  # segundos
    
  # Configurações de auditoria
  audit:
    log_all_actions: true
    log_sensitive_data: false
    retention_days: 90
    
  # Configurações de validação
  validation:
    input_sanitization: true
    output_encoding: true
    csrf_protection: true
    
  # Padrões de conformidade
  compliance:
    standards:
      - "OWASP_TOP_10"
      - "ISO_27001"
      - "GDPR"
      - "LGPD"
    
    # Verificações obrigatórias
    mandatory_checks:
      - "sql_injection"
      - "xss_prevention"
      - "authentication"
      - "authorization"
      - "data_encryption"

# =============================================================================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# =============================================================================
development:
  # Configurações de debug
  debug:
    enabled: false
    verbose_logging: false
    save_intermediate_results: false
    
  # Configurações de teste
  testing:
    auto_run_tests: true
    test_coverage_threshold: 0.8
    performance_benchmarks: true
    
  # Configurações de profiling
  profiling:
    enabled: false
    profile_models: false
    profile_quality_gates: false
    
  # Configurações de cache
  cache:
    enabled: true
    ttl_seconds: 3600
    max_size_mb: 1024
    
# =============================================================================
# CONFIGURAÇÕES DE PRODUÇÃO
# =============================================================================
production:
  # Otimizações de performance
  optimizations:
    model_caching: true
    result_caching: true
    batch_processing: true
    async_execution: true
    
  # Configurações de escalabilidade
  scaling:
    auto_scaling: false
    min_instances: 1
    max_instances: 4
    scale_threshold: 0.8
    
  # Configurações de backup
  backup:
    enabled: true
    interval_hours: 24
    retention_days: 7
    backup_path: "./backups"
    
  # Configurações de monitoramento
  monitoring:
    health_checks: true
    alerting: true
    dashboard_enabled: true
    
# =============================================================================
# CONFIGURAÇÕES DE NOTIFICAÇÕES
# =============================================================================
notifications:
  # Configurações gerais
  enabled: true
  
  # Canais de notificação
  channels:
    email:
      enabled: false
      smtp_server: "smtp.gmail.com"
      smtp_port: 587
      username: "${SMTP_USERNAME}"
      password: "${SMTP_PASSWORD}"
      
    slack:
      enabled: false
      webhook_url: "${SLACK_WEBHOOK_URL}"
      
    discord:
      enabled: false
      webhook_url: "${DISCORD_WEBHOOK_URL}"
      
    console:
      enabled: true
      
  # Tipos de notificação
  events:
    critical_error: true
    quality_gate_failure: true
    security_vulnerability: true
    task_completion: false
    system_health: true

# =============================================================================
# CONFIGURAÇÕES DE VARIÁVEIS DE AMBIENTE
# =============================================================================
environment_variables:
  # Variáveis obrigatórias
  required:
    - "GLPI_USER_TOKEN"
    - "GLPI_APP_TOKEN"
    - "GLPI_DB_USER"
    - "GLPI_DB_PASSWORD"
    
  # Variáveis opcionais
  optional:
    - "SMTP_USERNAME"
    - "SMTP_PASSWORD"
    - "SLACK_WEBHOOK_URL"
    - "DISCORD_WEBHOOK_URL"
    - "OPENAI_API_KEY"  # Para modelos de fallback
    - "ANTHROPIC_API_KEY"  # Para modelos de fallback

# =============================================================================
# CONFIGURAÇÕES DE WORKFLOWS
# =============================================================================
workflows:
  # Workflow de análise completa
  comprehensive_analysis:
    steps:
      - name: "code_analysis"
        agent: "code_analyst"
        timeout: 300
        
      - name: "security_audit"
        agent: "security_auditor"
        timeout: 600
        depends_on: ["code_analysis"]
        
      - name: "documentation_generation"
        agent: "documentation_generator"
        timeout: 300
        depends_on: ["code_analysis"]
        
      - name: "quality_validation"
        agent: "reasoning_agent"
        timeout: 180
        depends_on: ["code_analysis", "security_audit"]
        
  # Workflow de auditoria de segurança
  security_audit:
    steps:
      - name: "vulnerability_scan"
        agent: "security_auditor"
        timeout: 600
        
      - name: "compliance_check"
        agent: "reasoning_agent"
        timeout: 300
        depends_on: ["vulnerability_scan"]
        
  # Workflow de geração de documentação
  documentation_generation:
    steps:
      - name: "code_documentation"
        agent: "documentation_generator"
        timeout: 300
        
      - name: "api_documentation"
        agent: "documentation_generator"
        timeout: 300
        
      - name: "user_guide"
        agent: "documentation_generator"
        timeout: 300
        depends_on: ["code_documentation", "api_documentation"]

# =============================================================================
# CONFIGURAÇÕES DE TEMPLATES
# =============================================================================
templates:
  # Templates de código
  code:
    php_class: "./templates/php_class.template"
    php_function: "./templates/php_function.template"
    javascript_module: "./templates/js_module.template"
    
  # Templates de documentação
  documentation:
    api_endpoint: "./templates/api_endpoint.md"
    function_doc: "./templates/function_doc.md"
    class_doc: "./templates/class_doc.md"
    
  # Templates de relatórios
  reports:
    security_report: "./templates/security_report.html"
    quality_report: "./templates/quality_report.html"
    performance_report: "./templates/performance_report.html"

# =============================================================================
# CONFIGURAÇÕES FINAIS
# =============================================================================
# Versão do arquivo de configuração
config_version: "1.0.0"

# Data de criação
created_at: "2024-01-30T10:00:00Z"

# Última modificação
last_modified: "2024-01-30T10:00:00Z"

# Checksum para validação de integridade
checksum: "sha256:placeholder"