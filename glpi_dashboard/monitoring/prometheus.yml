# Configuração do Prometheus para GLPI Dashboard
global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Backend Flask - Métricas da aplicação
  - job_name: 'glpi-dashboard-backend'
    static_configs:
      - targets: ['localhost:5000']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true
    params:
      format: ['prometheus']

  # Frontend React - Métricas via proxy (se configurado)
  - job_name: 'glpi-dashboard-frontend'
    static_configs:
      - targets: ['localhost:3001']
    metrics_path: '/api/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Sistema operacional (node_exporter)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['localhost:9100']
    scrape_interval: 15s

  # Redis (se configurado)
  - job_name: 'redis'
    static_configs:
      - targets: ['localhost:9121']
    scrape_interval: 15s

  # Blackbox exporter para monitoramento de endpoints
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://localhost:5000/api/health
        - http://localhost:3001/
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: localhost:9115

  # Monitoramento do GLPI (via backend)
  - job_name: 'glpi-status'
    static_configs:
      - targets: ['localhost:5000']
    metrics_path: '/api/status'
    scrape_interval: 60s
    scrape_timeout: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'glpi_.*'
        target_label: service
        replacement: 'glpi'